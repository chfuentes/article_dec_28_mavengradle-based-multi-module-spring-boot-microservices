name: MiPipeline
on:
  push:
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Set up JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '11'
          distribution: 'zulu' # Alternative distribution options are available
          
      - name: Compilar
        run: |
          chmod +x gradlew
          ./gradlew build bootBuildImage

      - name: Test Path
        run: |
            ls -lt 
            ls -lt $GITHUB_WORKSPACE/
            chmod +x jmeter
            chmod +x jmeter/test.jmx
     
     # - name: Verificar creacion compilado JAR
     #  run: |
     #       ls -lt 
     #       ls -lt $GITHUB_WORKSPACE/build
     #       ls -lt $GITHUB_WORKSPACE/service-a/build/libs
     #       ls -lt $GITHUB_WORKSPACE/service-b/build/libs
     #       ls -lt $GITHUB_WORKSPACE/service-c/build/libs
            
      - name: Init compilado
        run: |
          java -jar $GITHUB_WORKSPACE/service-a/build/libs/service-a-0.0.1-SNAPSHOT.jar &
          java -jar $GITHUB_WORKSPACE/service-b/build/libs/service-b-0.0.1-SNAPSHOT.jar &
          java -jar $GITHUB_WORKSPACE/service-c/build/libs/service-c-0.0.1-SNAPSHOT.jar &
      
      #- name: Verificar creacion compilado Docker
        #run: #docker images 
        
      #- name: Cache SonarCloud packages
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.sonar/cache
      #    key: ${{ runner.os }}-sonar
      #    restore-keys: ${{ runner.os }}-sonar
          
      #- name: Cache Gradle packages
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.gradle/caches
      #    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      #    restore-keys: ${{ runner.os }}-gradle

      - name: Prueba compilado JAR
        run: |
          curl 127.0.0.1:8081/greeting || true
          curl 127.0.0.1:8082/greeting || true
          curl 127.0.0.1:8083/greeting || true
          echo ${GITHUB_WORKSPACE}

      # Steps represent a sequence of tasks that will be executed as part of the job

      - name: where are the files?
        run: |
           pwd
           ls
      - name: create test_report
        run: |
           mkdir $GITHUB_WORKSPACE/test_report

      # Runs a set of commands using the runners shell
      - name: install jmeter
        run: |
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.5.zip
          unzip apache-jmeter-5.5.zip
          cd apache-jmeter-5.5/bin
          ./jmeter -v
          pwd

      - name: install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.5
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip

      - name: run jmx scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.5/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
         
      - name: move jtl files to test_report
        run: |
          chmod +x $GITHUB_WORKSPACE/test_report
          mv *.jtl $GITHUB_WORKSPACE/test_report
         
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: test_results
         path: test_report
          
     # - name: Upload Results
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: jmeter-results
     #     path: result.jtl
          
     # - name: Compilar y Analizar con Sonar
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
     #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     #   run: |
     #     chmod +x gradlew
     #     ./gradlew build sonar --info
          
     # - name: Docker Login
     #   uses: docker/login-action@v2.2.0
     #   with: 
     #     username: ${{ secrets.DOCKER_USERNAME }}
     #     password: ${{ secrets.DOCKER_PASSWORD }}
      
     # - name: Send docker images
     #   run: |
     #     docker tag 7d820823f33c chfuentesu/spring-multi-module-service-service-a
     #     docker tag c46339799598 chfuentesu/spring-multi-module-service-service-b
     #     docker tag 61e555bbcb7b chfuentesu/spring-multi-module-service-service-c
     #     docker push chfuentesu/spring-multi-module-service-service-a
     #     docker push chfuentesu/spring-multi-module-service-service-b
     #     docker push chfuentesu/spring-multi-module-service-service-c      
