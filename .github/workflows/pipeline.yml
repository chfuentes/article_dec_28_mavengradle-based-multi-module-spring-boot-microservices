name: MiPipeline
on:
  push:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '11'
          distribution: 'zulu' # Alternative distribution options are available
      - name: Compilar
        run: |
          chmod +x gradlew
          ./gradlew build bootBuildImage
      - name: Verificar compilado
        run: |
            ls -lt 
            ls -lt $GITHUB_WORKSPACE/build
      - name: Verificar compilado
        run: docker images | grep spring-multi-module
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Compilar y Analizar con Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          chmod +x gradlew
          ./gradlew build sonar --info
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build
        run: |
          #docker build --tag chfuentesu/finaldevops:latest $GITHUB_WORKSPACE/deploy
          #docker images
      
